// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessagePackage.proto

package tech.pcloud.nnts.message;

public final class TransferProto {
  private TransferProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code netty.OperationType}
   */
  public enum OperationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HEARTBEAT = 0;</code>
     */
    HEARTBEAT(0),
    /**
     * <code>CONNECT = 1;</code>
     */
    CONNECT(1),
    /**
     * <code>DISCONNECT = 2;</code>
     */
    DISCONNECT(2),
    /**
     * <code>TRANSFER = 3;</code>
     */
    TRANSFER(3),
    /**
     * <code>CLIENT_REGISTER = 4;</code>
     */
    CLIENT_REGISTER(4),
    /**
     * <code>SERVICE_REGISTER = 5;</code>
     */
    SERVICE_REGISTER(5),
    ;

    /**
     * <code>HEARTBEAT = 0;</code>
     */
    public static final int HEARTBEAT_VALUE = 0;
    /**
     * <code>CONNECT = 1;</code>
     */
    public static final int CONNECT_VALUE = 1;
    /**
     * <code>DISCONNECT = 2;</code>
     */
    public static final int DISCONNECT_VALUE = 2;
    /**
     * <code>TRANSFER = 3;</code>
     */
    public static final int TRANSFER_VALUE = 3;
    /**
     * <code>CLIENT_REGISTER = 4;</code>
     */
    public static final int CLIENT_REGISTER_VALUE = 4;
    /**
     * <code>SERVICE_REGISTER = 5;</code>
     */
    public static final int SERVICE_REGISTER_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static OperationType valueOf(int value) {
      return forNumber(value);
    }

    public static OperationType forNumber(int value) {
      switch (value) {
        case 0: return HEARTBEAT;
        case 1: return CONNECT;
        case 2: return DISCONNECT;
        case 3: return TRANSFER;
        case 4: return CLIENT_REGISTER;
        case 5: return SERVICE_REGISTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OperationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OperationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OperationType>() {
            public OperationType findValueByNumber(int number) {
              return OperationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return TransferProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final OperationType[] VALUES = values();

    public static OperationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OperationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:netty.OperationType)
  }

  /**
   * Protobuf enum {@code netty.RequestType}
   */
  public enum RequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REQUEST = 0;</code>
     */
    REQUEST(0),
    /**
     * <code>RESPONSE = 1;</code>
     */
    RESPONSE(1),
    ;

    /**
     * <code>REQUEST = 0;</code>
     */
    public static final int REQUEST_VALUE = 0;
    /**
     * <code>RESPONSE = 1;</code>
     */
    public static final int RESPONSE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RequestType valueOf(int value) {
      return forNumber(value);
    }

    public static RequestType forNumber(int value) {
      switch (value) {
        case 0: return REQUEST;
        case 1: return RESPONSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return TransferProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final RequestType[] VALUES = values();

    public static RequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:netty.RequestType)
  }

  public interface TransferOrBuilder extends
      // @@protoc_insertion_point(interface_extends:netty.Transfer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 request_id = 1 [default = 0];</code>
     */
    boolean hasRequestId();
    /**
     * <code>optional int64 request_id = 1 [default = 0];</code>
     */
    long getRequestId();

    /**
     * <code>required int64 node_id = 2;</code>
     */
    boolean hasNodeId();
    /**
     * <code>required int64 node_id = 2;</code>
     */
    long getNodeId();

    /**
     * <code>optional string service_name = 3;</code>
     */
    boolean hasServiceName();
    /**
     * <code>optional string service_name = 3;</code>
     */
    String getServiceName();
    /**
     * <code>optional string service_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getServiceNameBytes();

    /**
     * <code>required .netty.OperationType operation = 4;</code>
     */
    boolean hasOperation();
    /**
     * <code>required .netty.OperationType operation = 4;</code>
     */
    OperationType getOperation();

    /**
     * <code>optional string signature = 5;</code>
     */
    boolean hasSignature();
    /**
     * <code>optional string signature = 5;</code>
     */
    String getSignature();
    /**
     * <code>optional string signature = 5;</code>
     */
    com.google.protobuf.ByteString
        getSignatureBytes();

    /**
     * <code>map&lt;string, string&gt; handler = 6;</code>
     */
    int getHandlerCount();
    /**
     * <code>map&lt;string, string&gt; handler = 6;</code>
     */
    boolean containsHandler(
            String key);
    /**
     * Use {@link #getHandlerMap()} instead.
     */
    @Deprecated
    java.util.Map<String, String>
    getHandler();
    /**
     * <code>map&lt;string, string&gt; handler = 6;</code>
     */
    java.util.Map<String, String>
    getHandlerMap();
    /**
     * <code>map&lt;string, string&gt; handler = 6;</code>
     */

    String getHandlerOrDefault(
            String key,
            String defaultValue);
    /**
     * <code>map&lt;string, string&gt; handler = 6;</code>
     */

    String getHandlerOrThrow(
            String key);

    /**
     * <code>optional bytes data = 7;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 7;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>required .netty.RequestType type = 8;</code>
     */
    boolean hasType();
    /**
     * <code>required .netty.RequestType type = 8;</code>
     */
    RequestType getType();
  }
  /**
   * Protobuf type {@code netty.Transfer}
   */
  public  static final class Transfer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:netty.Transfer)
      TransferOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Transfer.newBuilder() to construct.
    private Transfer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Transfer() {
      requestId_ = 0L;
      nodeId_ = 0L;
      serviceName_ = "";
      operation_ = 0;
      signature_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
      type_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Transfer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              requestId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nodeId_ = input.readInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              serviceName_ = bs;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              OperationType value = OperationType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                operation_ = rawValue;
              }
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              signature_ = bs;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                handler_ = com.google.protobuf.MapField.newMapField(
                    HandlerDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<String, String>
              handler__ = input.readMessage(
                  HandlerDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              handler_.getMutableMap().put(
                  handler__.getKey(), handler__.getValue());
              break;
            }
            case 58: {
              bitField0_ |= 0x00000020;
              data_ = input.readBytes();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              RequestType value = RequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                type_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TransferProto.internal_static_netty_Transfer_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetHandler();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TransferProto.internal_static_netty_Transfer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Transfer.class, Builder.class);
    }

    private int bitField0_;
    public static final int REQUEST_ID_FIELD_NUMBER = 1;
    private long requestId_;
    /**
     * <code>optional int64 request_id = 1 [default = 0];</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 request_id = 1 [default = 0];</code>
     */
    public long getRequestId() {
      return requestId_;
    }

    public static final int NODE_ID_FIELD_NUMBER = 2;
    private long nodeId_;
    /**
     * <code>required int64 node_id = 2;</code>
     */
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 node_id = 2;</code>
     */
    public long getNodeId() {
      return nodeId_;
    }

    public static final int SERVICE_NAME_FIELD_NUMBER = 3;
    private volatile Object serviceName_;
    /**
     * <code>optional string service_name = 3;</code>
     */
    public boolean hasServiceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string service_name = 3;</code>
     */
    public String getServiceName() {
      Object ref = serviceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serviceName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string service_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getServiceNameBytes() {
      Object ref = serviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPERATION_FIELD_NUMBER = 4;
    private int operation_;
    /**
     * <code>required .netty.OperationType operation = 4;</code>
     */
    public boolean hasOperation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .netty.OperationType operation = 4;</code>
     */
    public OperationType getOperation() {
      @SuppressWarnings("deprecation")
      OperationType result = OperationType.valueOf(operation_);
      return result == null ? OperationType.HEARTBEAT : result;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 5;
    private volatile Object signature_;
    /**
     * <code>optional string signature = 5;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string signature = 5;</code>
     */
    public String getSignature() {
      Object ref = signature_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          signature_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string signature = 5;</code>
     */
    public com.google.protobuf.ByteString
        getSignatureBytes() {
      Object ref = signature_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        signature_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HANDLER_FIELD_NUMBER = 6;
    private static final class HandlerDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, String> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, String>newDefaultInstance(
                  TransferProto.internal_static_netty_Transfer_HandlerEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        String, String> handler_;
    private com.google.protobuf.MapField<String, String>
    internalGetHandler() {
      if (handler_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            HandlerDefaultEntryHolder.defaultEntry);
      }
      return handler_;
    }

    public int getHandlerCount() {
      return internalGetHandler().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; handler = 6;</code>
     */

    public boolean containsHandler(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetHandler().getMap().containsKey(key);
    }
    /**
     * Use {@link #getHandlerMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, String> getHandler() {
      return getHandlerMap();
    }
    /**
     * <code>map&lt;string, string&gt; handler = 6;</code>
     */

    public java.util.Map<String, String> getHandlerMap() {
      return internalGetHandler().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; handler = 6;</code>
     */

    public String getHandlerOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetHandler().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; handler = 6;</code>
     */

    public String getHandlerOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetHandler().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DATA_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 7;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes data = 7;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int TYPE_FIELD_NUMBER = 8;
    private int type_;
    /**
     * <code>required .netty.RequestType type = 8;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .netty.RequestType type = 8;</code>
     */
    public RequestType getType() {
      @SuppressWarnings("deprecation")
      RequestType result = RequestType.valueOf(type_);
      return result == null ? RequestType.REQUEST : result;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasNodeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, nodeId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, serviceName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, operation_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, signature_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetHandler(),
          HandlerDefaultEntryHolder.defaultEntry,
          6);
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, data_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(8, type_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, nodeId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, serviceName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, operation_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, signature_);
      }
      for (java.util.Map.Entry<String, String> entry
           : internalGetHandler().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, String>
        handler__ = HandlerDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, handler__);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, data_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Transfer)) {
        return super.equals(obj);
      }
      Transfer other = (Transfer) obj;

      boolean result = true;
      result = result && (hasRequestId() == other.hasRequestId());
      if (hasRequestId()) {
        result = result && (getRequestId()
            == other.getRequestId());
      }
      result = result && (hasNodeId() == other.hasNodeId());
      if (hasNodeId()) {
        result = result && (getNodeId()
            == other.getNodeId());
      }
      result = result && (hasServiceName() == other.hasServiceName());
      if (hasServiceName()) {
        result = result && getServiceName()
            .equals(other.getServiceName());
      }
      result = result && (hasOperation() == other.hasOperation());
      if (hasOperation()) {
        result = result && operation_ == other.operation_;
      }
      result = result && (hasSignature() == other.hasSignature());
      if (hasSignature()) {
        result = result && getSignature()
            .equals(other.getSignature());
      }
      result = result && internalGetHandler().equals(
          other.internalGetHandler());
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRequestId()) {
        hash = (37 * hash) + REQUEST_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getRequestId());
      }
      if (hasNodeId()) {
        hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getNodeId());
      }
      if (hasServiceName()) {
        hash = (37 * hash) + SERVICE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getServiceName().hashCode();
      }
      if (hasOperation()) {
        hash = (37 * hash) + OPERATION_FIELD_NUMBER;
        hash = (53 * hash) + operation_;
      }
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      if (!internalGetHandler().getMap().isEmpty()) {
        hash = (37 * hash) + HANDLER_FIELD_NUMBER;
        hash = (53 * hash) + internalGetHandler().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Transfer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Transfer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Transfer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Transfer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Transfer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Transfer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Transfer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Transfer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Transfer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Transfer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Transfer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Transfer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Transfer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code netty.Transfer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:netty.Transfer)
        TransferOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TransferProto.internal_static_netty_Transfer_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetHandler();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetMutableHandler();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TransferProto.internal_static_netty_Transfer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Transfer.class, Builder.class);
      }

      // Construct using tech.pcloud.nnts.message.TransferProto.Transfer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        requestId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        serviceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        operation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        signature_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        internalGetMutableHandler().clear();
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TransferProto.internal_static_netty_Transfer_descriptor;
      }

      @Override
      public Transfer getDefaultInstanceForType() {
        return Transfer.getDefaultInstance();
      }

      @Override
      public Transfer build() {
        Transfer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Transfer buildPartial() {
        Transfer result = new Transfer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requestId_ = requestId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nodeId_ = nodeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serviceName_ = serviceName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.operation_ = operation_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.signature_ = signature_;
        result.handler_ = internalGetHandler();
        result.handler_.makeImmutable();
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Transfer) {
          return mergeFrom((Transfer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Transfer other) {
        if (other == Transfer.getDefaultInstance()) return this;
        if (other.hasRequestId()) {
          setRequestId(other.getRequestId());
        }
        if (other.hasNodeId()) {
          setNodeId(other.getNodeId());
        }
        if (other.hasServiceName()) {
          bitField0_ |= 0x00000004;
          serviceName_ = other.serviceName_;
          onChanged();
        }
        if (other.hasOperation()) {
          setOperation(other.getOperation());
        }
        if (other.hasSignature()) {
          bitField0_ |= 0x00000010;
          signature_ = other.signature_;
          onChanged();
        }
        internalGetMutableHandler().mergeFrom(
            other.internalGetHandler());
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasNodeId()) {
          return false;
        }
        if (!hasOperation()) {
          return false;
        }
        if (!hasType()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Transfer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Transfer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long requestId_ ;
      /**
       * <code>optional int64 request_id = 1 [default = 0];</code>
       */
      public boolean hasRequestId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 request_id = 1 [default = 0];</code>
       */
      public long getRequestId() {
        return requestId_;
      }
      /**
       * <code>optional int64 request_id = 1 [default = 0];</code>
       */
      public Builder setRequestId(long value) {
        bitField0_ |= 0x00000001;
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 request_id = 1 [default = 0];</code>
       */
      public Builder clearRequestId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requestId_ = 0L;
        onChanged();
        return this;
      }

      private long nodeId_ ;
      /**
       * <code>required int64 node_id = 2;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 node_id = 2;</code>
       */
      public long getNodeId() {
        return nodeId_;
      }
      /**
       * <code>required int64 node_id = 2;</code>
       */
      public Builder setNodeId(long value) {
        bitField0_ |= 0x00000002;
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 node_id = 2;</code>
       */
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nodeId_ = 0L;
        onChanged();
        return this;
      }

      private Object serviceName_ = "";
      /**
       * <code>optional string service_name = 3;</code>
       */
      public boolean hasServiceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string service_name = 3;</code>
       */
      public String getServiceName() {
        Object ref = serviceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serviceName_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string service_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getServiceNameBytes() {
        Object ref = serviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string service_name = 3;</code>
       */
      public Builder setServiceName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        serviceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string service_name = 3;</code>
       */
      public Builder clearServiceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serviceName_ = getDefaultInstance().getServiceName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string service_name = 3;</code>
       */
      public Builder setServiceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        serviceName_ = value;
        onChanged();
        return this;
      }

      private int operation_ = 0;
      /**
       * <code>required .netty.OperationType operation = 4;</code>
       */
      public boolean hasOperation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .netty.OperationType operation = 4;</code>
       */
      public OperationType getOperation() {
        @SuppressWarnings("deprecation")
        OperationType result = OperationType.valueOf(operation_);
        return result == null ? OperationType.HEARTBEAT : result;
      }
      /**
       * <code>required .netty.OperationType operation = 4;</code>
       */
      public Builder setOperation(OperationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        operation_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .netty.OperationType operation = 4;</code>
       */
      public Builder clearOperation() {
        bitField0_ = (bitField0_ & ~0x00000008);
        operation_ = 0;
        onChanged();
        return this;
      }

      private Object signature_ = "";
      /**
       * <code>optional string signature = 5;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string signature = 5;</code>
       */
      public String getSignature() {
        Object ref = signature_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            signature_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string signature = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSignatureBytes() {
        Object ref = signature_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          signature_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string signature = 5;</code>
       */
      public Builder setSignature(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string signature = 5;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000010);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      /**
       * <code>optional string signature = 5;</code>
       */
      public Builder setSignatureBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        signature_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          String, String> handler_;
      private com.google.protobuf.MapField<String, String>
      internalGetHandler() {
        if (handler_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              HandlerDefaultEntryHolder.defaultEntry);
        }
        return handler_;
      }
      private com.google.protobuf.MapField<String, String>
      internalGetMutableHandler() {
        onChanged();;
        if (handler_ == null) {
          handler_ = com.google.protobuf.MapField.newMapField(
              HandlerDefaultEntryHolder.defaultEntry);
        }
        if (!handler_.isMutable()) {
          handler_ = handler_.copy();
        }
        return handler_;
      }

      public int getHandlerCount() {
        return internalGetHandler().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; handler = 6;</code>
       */

      public boolean containsHandler(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetHandler().getMap().containsKey(key);
      }
      /**
       * Use {@link #getHandlerMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, String> getHandler() {
        return getHandlerMap();
      }
      /**
       * <code>map&lt;string, string&gt; handler = 6;</code>
       */

      public java.util.Map<String, String> getHandlerMap() {
        return internalGetHandler().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; handler = 6;</code>
       */

      public String getHandlerOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetHandler().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; handler = 6;</code>
       */

      public String getHandlerOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetHandler().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearHandler() {
        internalGetMutableHandler().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; handler = 6;</code>
       */

      public Builder removeHandler(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableHandler().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, String>
      getMutableHandler() {
        return internalGetMutableHandler().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; handler = 6;</code>
       */
      public Builder putHandler(
          String key,
          String value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableHandler().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; handler = 6;</code>
       */

      public Builder putAllHandler(
          java.util.Map<String, String> values) {
        internalGetMutableHandler().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 7;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes data = 7;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 7;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 7;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000040);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>required .netty.RequestType type = 8;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required .netty.RequestType type = 8;</code>
       */
      public RequestType getType() {
        @SuppressWarnings("deprecation")
        RequestType result = RequestType.valueOf(type_);
        return result == null ? RequestType.REQUEST : result;
      }
      /**
       * <code>required .netty.RequestType type = 8;</code>
       */
      public Builder setType(RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .netty.RequestType type = 8;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        type_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:netty.Transfer)
    }

    // @@protoc_insertion_point(class_scope:netty.Transfer)
    private static final Transfer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Transfer();
    }

    public static Transfer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<Transfer>
        PARSER = new com.google.protobuf.AbstractParser<Transfer>() {
      @Override
      public Transfer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Transfer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Transfer> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Transfer> getParserForType() {
      return PARSER;
    }

    @Override
    public Transfer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_netty_Transfer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_netty_Transfer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_netty_Transfer_HandlerEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_netty_Transfer_HandlerEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024MessagePackage.proto\022\005netty\"\223\002\n\010Transf" +
      "er\022\025\n\nrequest_id\030\001 \001(\003:\0010\022\017\n\007node_id\030\002 \002" +
      "(\003\022\024\n\014service_name\030\003 \001(\t\022\'\n\toperation\030\004 " +
      "\002(\0162\024.netty.OperationType\022\021\n\tsignature\030\005" +
      " \001(\t\022-\n\007handler\030\006 \003(\0132\034.netty.Transfer.H" +
      "andlerEntry\022\014\n\004data\030\007 \001(\014\022 \n\004type\030\010 \002(\0162" +
      "\022.netty.RequestType\032.\n\014HandlerEntry\022\013\n\003k" +
      "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*t\n\rOperation" +
      "Type\022\r\n\tHEARTBEAT\020\000\022\013\n\007CONNECT\020\001\022\016\n\nDISC" +
      "ONNECT\020\002\022\014\n\010TRANSFER\020\003\022\023\n\017CLIENT_REGISTE" +
      "R\020\004\022\024\n\020SERVICE_REGISTER\020\005*(\n\013RequestType" +
      "\022\013\n\007REQUEST\020\000\022\014\n\010RESPONSE\020\001B)\n\030tech.pclo" +
      "ud.nnts.messageB\rTransferProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_netty_Transfer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_netty_Transfer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_netty_Transfer_descriptor,
        new String[] { "RequestId", "NodeId", "ServiceName", "Operation", "Signature", "Handler", "Data", "Type", });
    internal_static_netty_Transfer_HandlerEntry_descriptor =
      internal_static_netty_Transfer_descriptor.getNestedTypes().get(0);
    internal_static_netty_Transfer_HandlerEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_netty_Transfer_HandlerEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
